<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Post', 'doctrine');

/**
 * BasePost
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $category_id
 * @property string $title
 * @property string $body
 * @property timestamp $created_at
 * @property timestamp $updated_at
 * @property Category $Category
 * 
 * @method integer   getId()          Returns the current record's "id" value
 * @method integer   getCategoryId()  Returns the current record's "category_id" value
 * @method string    getTitle()       Returns the current record's "title" value
 * @method string    getBody()        Returns the current record's "body" value
 * @method timestamp getCreatedAt()   Returns the current record's "created_at" value
 * @method timestamp getUpdatedAt()   Returns the current record's "updated_at" value
 * @method Category  getCategory()    Returns the current record's "Category" value
 * @method Post      setId()          Sets the current record's "id" value
 * @method Post      setCategoryId()  Sets the current record's "category_id" value
 * @method Post      setTitle()       Sets the current record's "title" value
 * @method Post      setBody()        Sets the current record's "body" value
 * @method Post      setCreatedAt()   Sets the current record's "created_at" value
 * @method Post      setUpdatedAt()   Sets the current record's "updated_at" value
 * @method Post      setCategory()    Sets the current record's "Category" value
 * 
 * @package    blog
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BasePost extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('post');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('category_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('title', 'string', 100, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 100,
             ));
        $this->hasColumn('body', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('created_at', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('updated_at', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Category', array(
             'local' => 'category_id',
             'foreign' => 'id'));
    }
}